# Autogenerated config.py
# Documentation:
#   qute://help/configuring.html
#   qute://help/settings.html

# Uncomment this to still load settings configured via autoconfig.yml
# config.load_autoconfig()

# Aliases for commands. The keys of the given dictionary are the
# aliases, while the values are the commands they map to.
# Type: Dict
c.aliases = {'w': 'session-save', 'q': 'quit', 'wq': 'quit --save'}

# This setting can be used to map keys to other keys. When the key used
# as dictionary-key is pressed, the binding for the key used as
# dictionary-value is invoked instead. This is useful for global
# remappings of keys, for example to map Ctrl-[ to Escape. Note that
# when a key is bound (via `bindings.default` or `bindings.commands`),
# the mapping is ignored.
# Type: Dict
c.bindings.key_mappings = {'<Ctrl-[>': '<Escape>', '<Ctrl-6>': '<Ctrl-^>', '<Ctrl-M>': '<Return>', '<Ctrl-J>': '<Return>', '<Shift-Return>': '<Return>', '<Enter>': '<Return>', '<Shift-Enter>': '<Return>', '<Ctrl-Enter>': '<Ctrl-Return>'}

# Value to send in the `Accept-Language` header.
# Type: String
c.content.headers.accept_language = 'en-US,en;q=0.5'

# Set custom headers for qutebrowser HTTP requests.
# Type: Dict
c.content.headers.custom = {'accept': 'text/html, */*; q=0.01'}

# User agent to send. Unset to send the default.
# Type: String
c.content.headers.user_agent = 'Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101 Firefox/52.0'

# List of URLs of lists which contain hosts to block.  The file can be
# in one of the following formats:  - An `/etc/hosts`-like file - One
# host per line - A zip-file of any of the above, with either only one
# file, or a file named   `hosts` (with any extension).
# Type: List of Url
c.content.host_blocking.lists = ['https://www.malwaredomainlist.com/hostslist/hosts.txt', 'http://someonewhocares.org/hosts/hosts', 'http://winhelp2002.mvps.org/hosts.zip', 'http://malwaredomains.lehigh.edu/files/justdomains.zip', 'https://pgl.yoyo.org/adservers/serverlist.php?hostformat=hosts&mimetype=plaintext']

# Enables or disables WebGL.
# Type: Bool
c.content.webgl = True

# Definitions of search engines which can be used via the address bar.
# Maps a searchengine name (such as `DEFAULT`, or `ddg`) to a URL with a
# `{}` placeholder. The placeholder will be replaced by the search term,
# use `{{` and `}}` for literal `{`/`}` signs. The searchengine named
# `DEFAULT` is used when `url.auto_search` is turned on and something
# else than a URL was entered to be opened. Other search engines can be
# used by prepending the search engine name to the search term, e.g.
# `:open google qutebrowser`.
# Type: Dict
c.url.searchengines = {'DEFAULT': 'https://duckduckgo.com/?q={}', '8': 'https://8ch.net/{}', 'ht': 'https://hooktube.com/results?search_query={}', 'mp': 'https://www.marktplaats.nl/z.html?query={}', 'yt': 'https://www.youtube.com/results?search_query={}', 'img': 'https://duckduckgo.com/?q=!ddgi {}', 'vid': 'https://duckduckgo.com/?q=!ddgv {}', 'aw': 'https://wiki.archlinux.org/?search={}', 'aur': 'https://aur.archlinux.org/packages/?O=0&K={}&SB=p&SO=d', 'ts': 'https://torrentz2.eu/search?f={}', 'le': 'https://reddit.com/r/{}', 'eb': 'https://www.ebay.nl/sch/{}'}

# Bindings for normal mode
config.bind('J', 'tab-prev')
config.bind('K', 'tab-next')